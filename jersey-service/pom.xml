<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.digiplug.rest.demo</groupId>
    <artifactId>jersey-service</artifactId>
    <packaging>war</packaging>
    <version>0.1-SNAPSHOT</version>
    <name>jersey-service-demo</name>

    <properties>
    	<jdk.version>1.7</jdk.version>
    	
        <jersey.version>2.4.1</jersey.version>
        <spring.version>3.2.5.RELEASE</spring.version>
        
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${jersey.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
    	<!-- Internal dependencies -->
    	
    	<dependency>
    		<groupId>${project.groupId}</groupId>
    		<artifactId>persistence</artifactId>
    		<version>0.1-SNAPSHOT</version>
    	</dependency>
    	
    	<!-- Jersey -->
    	
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <!-- Use this artifact for servlet 2.x compatibility 
            <artifactId>jersey-container-servlet-core</artifactId>
            -->
            <artifactId>jersey-container-servlet</artifactId>
        </dependency>
        
        <!-- JSON support -->
        
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
        </dependency>
        
        <dependency>
        	<groupId>org.glassfish.jersey.ext</groupId>
        	<artifactId>jersey-spring3</artifactId>
        </dependency>
        
        <dependency>
        	<groupId>org.glassfish.jersey.ext</groupId>
        	<artifactId>jersey-bean-validation</artifactId>
        </dependency>
        
        <dependency>
        	<groupId>org.glassfish.jersey.ext</groupId>
        	<artifactId>jersey-wadl-doclet</artifactId>
        </dependency>
        
		<!-- Spring -->
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<!-- Test -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.1</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
			<scope>test</scope>
		</dependency>
    </dependencies>
    
    <build>
        <finalName>jersey-service-demo</finalName>
        
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>${jdk.version}</source>
						<target>${jdk.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.9.1</version>
				</plugin>
				
				<!--
					This plugin's configuration is used to store Eclipse m2e settings only.
					It has no influence on the Maven build itself.
				-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-javadoc-plugin</artifactId>
										<versionRange>[2.9.1,)</versionRange>
										<goals>
											<goal>javadoc</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>javadoc</goal>
						</goals>
						<phase>process-classes</phase>
					</execution>
				</executions>
				<configuration>
					<encoding>UTF-8</encoding>
					<verbose>false</verbose>
					<show>public</show>
					<subpackages>com.digiplug.rest</subpackages>
					<doclet>org.glassfish.jersey.wadl.doclet.ResourceDoclet</doclet>
					<docletPath>${path.separator}${project.build.outputDirectory}</docletPath>
					<docletArtifacts>
						<!-- jersey doclet generator -->
						<docletArtifact>
							<groupId>org.glassfish.jersey.ext</groupId>
							<artifactId>jersey-wadl-doclet</artifactId>
							<version>${jersey.version}</version>
						</docletArtifact>
						
						<!-- 
							Also specify jersey and xerces as doclet artifacts as the ResourceDoclet 
							uses classes provided by them to generate the resourcedoc.
						-->
						<docletArtifact>
							<groupId>org.glassfish.jersey.core</groupId>
							<artifactId>jersey-server</artifactId>
							<version>${jersey.version}</version>
						</docletArtifact>
						<docletArtifact>
							<groupId>xerces</groupId>
							<artifactId>xercesImpl</artifactId>
							<version>2.6.1</version>
						</docletArtifact>
					</docletArtifacts>
					<!-- 
						the following option is required as a work around for 
						version 2.5 of the javadoc plugin which will be used by a maven 
						version > 2.0.9
					-->
					<useStandardDocletOptions>false</useStandardDocletOptions>
					<additionalparam>-output ${project.build.outputDirectory}/resourcedoc.xml</additionalparam>
				</configuration>
			</plugin>
		</plugins>
    </build>
</project>
